{"mappings":"AAAA,aAGA,MAAMA,SAAWC,SAASC,eAAe,YACnCC,SAAWF,SAASC,eAAe,YAEnCE,QAAUH,SAASI,cAAc,cACjCC,OAASL,SAASI,cAAc,aAChCE,QAAUN,SAASI,cAAc,cAEjCG,OAASP,SAASI,cAAc,SAEhCI,WAAaR,SAASC,eAAe,cACrCQ,WAAaT,SAASC,eAAe,cAErCS,UAAYV,SAASI,cAAc,cACnCO,UAAYX,SAASI,cAAc,cAEzC,IAAIQ,QAASC,OAAQC,aAAcC,aAGnC,MAAMC,KAAO,KACXJ,SAAU,EACVC,OAAS,CAAC,EAAG,GACbC,aAAe,EACfC,aAAe,EAEfR,OAAOU,UAAUC,IAAI,UAErBnB,SAASoB,YAAc,EACvBjB,SAASiB,YAAc,EACvBX,WAAWW,YAAc,EACzBV,WAAWU,YAAc,EAKzBT,UAAUO,UAAUC,IAAI,kBACxBP,UAAUM,UAAUG,OAAO,kBAC3BV,UAAUO,UAAUG,OAAO,kBAC3BT,UAAUM,UAAUG,OAAO,mBAG7BJ,OAEA,MAAMK,aAAe,KACnBrB,SAASC,eAAe,YAAYc,gBAAgBI,YAAc,EAClEL,aAAe,EACfC,aAAgC,IAAjBA,aAAqB,EAAI,EACxCL,UAAUO,UAAUK,OAAO,kBAC3BX,UAAUM,UAAUK,OAAO,kBAC3BC,QAAQC,IAAI,uBAAuBT,aAAe,MAG9CU,QAAU,KACd,GAAIb,QAAS,CAEX,MAAMc,EAAOC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAI7CtB,OAAOU,UAAUG,OAAO,UACxBb,OAAOuB,IAAM,QAAQJ,QAGR,IAATA,GAEFL,eACArB,SAASC,eAAe,YAAYc,gBAAgBI,YAClDL,eAGFA,cAAgBY,EAChB1B,SAASC,eAAe,YAAYc,gBAAgBI,YAClDL,gBAMRX,QAAQ4B,iBAAiB,QAASN,SAElC,MAAMO,UAAY,KACZpB,UACFC,OAAOE,eAAiBD,aACxBd,SAASC,eAAe,UAAUc,gBAAgBI,YAChDN,OAAOE,cAELF,OAAOE,eAAiB,IAC1BH,SAAU,EACVZ,SACGI,cAAc,YAAYW,gBAC1BE,UAAUC,IAAI,kBAEjBlB,SACGI,cAAc,YAAYW,gBAC1BE,UAAUG,OAAO,kBAEpBb,OAAOU,UAAUC,IAAI,UAGrBK,QAAQC,IAAI,eAEZH,iBAMNf,QAAQyB,iBAAiB,QAASC,WAElC,MAAMC,MAAQ,KACZjB,OACAO,QAAQC,IAAI,uBAIdnB,OAAO0B,iBAAiB,QAASE","sources":["script.js"],"sourcesContent":["'use strict';\n\n// selecting elements\nconst score0El = document.getElementById('score--0'); // player 1 total score\nconst score1El = document.getElementById('score--1'); // player 2 total score\n\nconst btnRoll = document.querySelector('.btn--roll'); // Roll Die button\nconst btnNew = document.querySelector('.btn--new'); // New Game Button\nconst btnHold = document.querySelector('.btn--hold'); // Hold current Number button\n\nconst diceEl = document.querySelector('.dice'); // die selector\n\nconst current0El = document.getElementById('current--0'); // player 1 current score\nconst current1El = document.getElementById('current--1'); // player 2 current score\n\nconst player0El = document.querySelector('.player--0'); // player 1 section\nconst player1El = document.querySelector('.player--1'); // player 2 section\n\nlet playing, scores, currentScore, activePlayer;\n\n// starting conditions\nconst init = () => {\n  playing = true;\n  scores = [0, 0]; // scores[0] holds score for player 1, scores[1] holds score for player 2\n  currentScore = 0; // setting current score to 0\n  activePlayer = 0; // setting active player to player 1\n\n  diceEl.classList.add('hidden');\n\n  score0El.textContent = 0; // resetting player 1 visual total score to 0\n  score1El.textContent = 0; // resetting player 2 visual total score to 0\n  current0El.textContent = 0; // resetting player 1 visual current score to 0\n  current1El.textContent = 0; // resetting player 2 visual current score to 0\n\n  //   scores[0] = 0; // resetting player 1 total score to 0\n  //   scores[1] = 0; // resetting player 2 total score to 0\n\n  player0El.classList.add('player--active'); // resetting player 1 section to original color\n  player1El.classList.remove('player--active'); // resetting player 2 section to original color\n  player0El.classList.remove('player--winner'); // resetting winner\n  player1El.classList.remove('player--winner'); // resetting winner\n};\n\ninit();\n\nconst switchPlayer = () => {\n  document.getElementById(`current--${activePlayer}`).textContent = 0;\n  currentScore = 0;\n  activePlayer = activePlayer === 0 ? 1 : 0;\n  player0El.classList.toggle('player--active');\n  player1El.classList.toggle('player--active');\n  console.log(`switching to player ${activePlayer + 1}`);\n};\n\nconst rollDie = () => {\n  if (playing) {\n    // generate random dice number\n    const dice = Math.trunc(Math.random() * 6) + 1;\n    //   console.log(dice);\n\n    //  display a different die face, based on the random number generated\n    diceEl.classList.remove('hidden');\n    diceEl.src = `dice-${dice}.png`;\n\n    // checcking for rolled die, 1:\n    if (dice === 1) {\n      // switch to next player\n      switchPlayer();\n      document.getElementById(`current--${activePlayer}`).textContent =\n        currentScore;\n    } else {\n      // add die value to current score\n      currentScore += dice;\n      document.getElementById(`current--${activePlayer}`).textContent =\n        currentScore;\n    }\n  }\n};\n\n// Rolling die functionality\nbtnRoll.addEventListener('click', rollDie);\n\nconst holdScore = () => {\n  if (playing) {\n    scores[activePlayer] += currentScore;\n    document.getElementById(`score--${activePlayer}`).textContent =\n      scores[activePlayer];\n\n    if (scores[activePlayer] >= 50) {\n      playing = false;\n      document\n        .querySelector(`.player--${activePlayer}`)\n        .classList.add('player--winner');\n\n      document\n        .querySelector(`.player--${activePlayer}`)\n        .classList.remove('player--active');\n\n      diceEl.classList.add('hidden');\n      //   btnRoll.removeEventListener('click', rollDie);\n      //   btnHold.removeEventListener('click', holdScore);\n      console.log('Game Over.');\n    } else {\n      switchPlayer();\n    }\n  }\n};\n\n// holding score functionality\nbtnHold.addEventListener('click', holdScore);\n\nconst reset = () => {\n  init();\n  console.log('Resettig the game.');\n};\n\n// reseting the game functionality\nbtnNew.addEventListener('click', reset);\n"],"names":["score0El","document","getElementById","score1El","btnRoll","querySelector","btnNew","btnHold","diceEl","current0El","current1El","player0El","player1El","playing","scores","currentScore","activePlayer","init","classList","add","textContent","remove","switchPlayer","toggle","console","log","rollDie","dice","Math","trunc","random","src","addEventListener","holdScore","reset"],"version":3,"file":"index.e3618b1c.js.map"}